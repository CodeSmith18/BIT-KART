{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\BIT-KART\\\\client\\\\src\\\\index.js\";\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\nimport * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { createBrowserRouter, RouterProvider, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"about\",\n      children: \"About Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this)\n}, {\n  path: \"about\",\n  element: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"About\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 14\n  }, this)\n}]);\ncreateRoot(document.getElementById(\"root\")).render( /*#__PURE__*/_jsxDEV(RouterProvider, {\n  router: router\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this));\n// Nested Routes\n// Nested Routing is the general idea of coupling segments of the URL to component hierarchy and data. React Router's nested routes were inspired by the routing system in Ember.js circa 2014. The Ember team realized that in nearly every case, segments of the URL determine:\n\n// The layouts to render on the page\n// The data dependencies of those layouts\n// React Router embraces this convention with APIs for creating nested layouts coupled to URL segments and data.\n\n// Configure nested routes with JSX\ncreateBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 30\n  }, this),\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    path: \"contact\",\n    element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"dashboard\",\n    element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this),\n    loader: ({\n      request\n    }) => fetch(\"/api/dashboard.json\", {\n      signal: request.signal\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    element: /*#__PURE__*/_jsxDEV(AuthLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this),\n      loader: redirectIfUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"logout\",\n      action: logoutUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 5\n}, this)));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"names":["ReactDOM","App","reportWebVitals","root","createRoot","document","getElementById","render","_jsxDEV","React","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","createBrowserRouter","RouterProvider","Route","Link","jsxDEV","router","path","element","to","createRoutesFromElements","Root","Contact","Dashboard","loader","request","fetch","signal","AuthLayout","Login","redirectIfUser","action","logoutUser"],"sources":["C:/Users/ASUS/Desktop/BIT-KART/client/src/index.js"],"sourcesContent":["\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nimport * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: (\n      <div>\n        <h1>Hello World</h1>\n        <Link to=\"about\">About Us</Link>\n      </div>\n    ),\n  },\n  {\n    path: \"about\",\n    element: <div>About</div>,\n  },\n]);\n\ncreateRoot(document.getElementById(\"root\")).render(\n  <RouterProvider router={router} />\n);\n// Nested Routes\n// Nested Routing is the general idea of coupling segments of the URL to component hierarchy and data. React Router's nested routes were inspired by the routing system in Ember.js circa 2014. The Ember team realized that in nearly every case, segments of the URL determine:\n\n// The layouts to render on the page\n// The data dependencies of those layouts\n// React Router embraces this convention with APIs for creating nested layouts coupled to URL segments and data.\n\n// Configure nested routes with JSX\ncreateBrowserRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<Root />}>\n      <Route path=\"contact\" element={<Contact />} />\n      <Route\n        path=\"dashboard\"\n        element={<Dashboard />}\n        loader={({ request }) =>\n          fetch(\"/api/dashboard.json\", {\n            signal: request.signal,\n          })\n        }\n      />\n      <Route element={<AuthLayout />}>\n        <Route\n          path=\"login\"\n          element={<Login />}\n          loader={redirectIfUser}\n        />\n        <Route path=\"logout\" action={logoutUser} />\n      </Route>\n    </Route>\n  )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
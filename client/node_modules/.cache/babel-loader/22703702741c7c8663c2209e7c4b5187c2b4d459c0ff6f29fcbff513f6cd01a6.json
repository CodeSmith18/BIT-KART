{"ast":null,"code":"var Q = require(\"q\");\nmodule.exports = gasp;\nfunction gasp(task, interval) {\n  if (!task) {\n    throw new Error(\"No task specified.\");\n  }\n  var deferred,\n    timeout,\n    args,\n    savedArgs,\n    inProgress = false;\n  if (typeof interval === \"undefined\") {\n    interval = 50;\n  }\n\n  // This function accepts the arguments that will be passed to the task function\n  function gasped() {\n    if (!inProgress) {\n      args = Array.prototype.slice.call(arguments, 0);\n    } else {\n      savedArgs = Array.prototype.slice.call(arguments, 0);\n    }\n    if (!timeout) {\n      // reset the deferred and the timeout\n      deferred = Q.defer();\n      timeout = setTimeout(function () {\n        if (inProgress === true) {\n          // then we are colliding with a previous gasp.\n          args = savedArgs;\n          if (gasped.delegate && typeof gasped.delegate.willCollideWithPreviousGasp === \"function\") {\n            gasped.delegate.willCollideWithPreviousGasp.call(null, gasped, args);\n          }\n          clearTimeout(timeout);\n          timeout = null;\n          inProgress = false;\n          return;\n        } else {\n          inProgress = true;\n        }\n\n        // notify delegate\n        if (gasped.delegate && typeof gasped.delegate.willGasp === \"function\") {\n          gasped.delegate.willGasp.call(null, gasped, args);\n        }\n        clearTimeout(timeout);\n        timeout = null;\n        Q.fcall(function () {\n          return task.apply(this, args);\n        }).then(function () {\n          deferred.resolve(true);\n        }).fail(function (reason) {\n          deferred.reject(reason);\n        }).finally(function () {\n          inProgress = false;\n          args = savedArgs;\n        }).done();\n      }, interval);\n    }\n    return deferred.promise;\n  }\n  return gasped;\n}","map":{"version":3,"names":["Q","require","module","exports","gasp","task","interval","Error","deferred","timeout","args","savedArgs","inProgress","gasped","Array","prototype","slice","call","arguments","defer","setTimeout","delegate","willCollideWithPreviousGasp","clearTimeout","willGasp","fcall","apply","then","resolve","fail","reason","reject","finally","done","promise"],"sources":["C:/Users/ASUS/Desktop/BIT-KART/client/node_modules/gasp/index.js"],"sourcesContent":["var Q = require(\"q\");\n\nmodule.exports = gasp;\n\nfunction gasp (task, interval) {\n    if (!task) {\n        throw new Error(\"No task specified.\");\n    }\n    var deferred, timeout, args, savedArgs,\n        inProgress = false;\n\n    if (typeof interval === \"undefined\") {\n        interval = 50;\n    }\n\n    // This function accepts the arguments that will be passed to the task function\n    function gasped () {\n        if(!inProgress) {\n            args = Array.prototype.slice.call(arguments,0);\n        } else {\n            savedArgs = Array.prototype.slice.call(arguments,0);\n        }\n\n        if(!timeout) {\n            // reset the deferred and the timeout\n            deferred = Q.defer();\n            timeout = setTimeout(function () {\n                if(inProgress === true) {\n                    // then we are colliding with a previous gasp.\n                    args = savedArgs;\n                    if (gasped.delegate && typeof gasped.delegate.willCollideWithPreviousGasp === \"function\") {\n                        gasped.delegate.willCollideWithPreviousGasp.call(null, gasped, args);\n                    }\n                    clearTimeout(timeout);\n                    timeout = null;\n                    inProgress = false;\n                    return;\n                } else {\n                    inProgress = true;\n                }\n\n                // notify delegate\n                if (gasped.delegate && typeof gasped.delegate.willGasp === \"function\") {\n                    gasped.delegate.willGasp.call(null, gasped, args);\n                }\n                clearTimeout(timeout);\n                timeout = null;\n                Q.fcall(function () {\n                    return task.apply(this, args);\n                })\n                .then(function () {\n                    deferred.resolve(true);\n                }).fail(function (reason) {\n                    deferred.reject(reason);\n                })\n                .finally(function () {\n                    inProgress = false;\n                    args = savedArgs;\n                })\n                .done();\n            }, interval);\n        }\n\n        return deferred.promise;\n    }\n    return gasped;\n}\n"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAG,CAAC;AAEpBC,MAAM,CAACC,OAAO,GAAGC,IAAI;AAErB,SAASA,IAAIA,CAAEC,IAAI,EAAEC,QAAQ,EAAE;EAC3B,IAAI,CAACD,IAAI,EAAE;IACP,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;EACzC;EACA,IAAIC,QAAQ;IAAEC,OAAO;IAAEC,IAAI;IAAEC,SAAS;IAClCC,UAAU,GAAG,KAAK;EAEtB,IAAI,OAAON,QAAQ,KAAK,WAAW,EAAE;IACjCA,QAAQ,GAAG,EAAE;EACjB;;EAEA;EACA,SAASO,MAAMA,CAAA,EAAI;IACf,IAAG,CAACD,UAAU,EAAE;MACZF,IAAI,GAAGI,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,EAAC,CAAC,CAAC;IAClD,CAAC,MAAM;MACHP,SAAS,GAAGG,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,EAAC,CAAC,CAAC;IACvD;IAEA,IAAG,CAACT,OAAO,EAAE;MACT;MACAD,QAAQ,GAAGR,CAAC,CAACmB,KAAK,CAAC,CAAC;MACpBV,OAAO,GAAGW,UAAU,CAAC,YAAY;QAC7B,IAAGR,UAAU,KAAK,IAAI,EAAE;UACpB;UACAF,IAAI,GAAGC,SAAS;UAChB,IAAIE,MAAM,CAACQ,QAAQ,IAAI,OAAOR,MAAM,CAACQ,QAAQ,CAACC,2BAA2B,KAAK,UAAU,EAAE;YACtFT,MAAM,CAACQ,QAAQ,CAACC,2BAA2B,CAACL,IAAI,CAAC,IAAI,EAAEJ,MAAM,EAAEH,IAAI,CAAC;UACxE;UACAa,YAAY,CAACd,OAAO,CAAC;UACrBA,OAAO,GAAG,IAAI;UACdG,UAAU,GAAG,KAAK;UAClB;QACJ,CAAC,MAAM;UACHA,UAAU,GAAG,IAAI;QACrB;;QAEA;QACA,IAAIC,MAAM,CAACQ,QAAQ,IAAI,OAAOR,MAAM,CAACQ,QAAQ,CAACG,QAAQ,KAAK,UAAU,EAAE;UACnEX,MAAM,CAACQ,QAAQ,CAACG,QAAQ,CAACP,IAAI,CAAC,IAAI,EAAEJ,MAAM,EAAEH,IAAI,CAAC;QACrD;QACAa,YAAY,CAACd,OAAO,CAAC;QACrBA,OAAO,GAAG,IAAI;QACdT,CAAC,CAACyB,KAAK,CAAC,YAAY;UAChB,OAAOpB,IAAI,CAACqB,KAAK,CAAC,IAAI,EAAEhB,IAAI,CAAC;QACjC,CAAC,CAAC,CACDiB,IAAI,CAAC,YAAY;UACdnB,QAAQ,CAACoB,OAAO,CAAC,IAAI,CAAC;QAC1B,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,MAAM,EAAE;UACtBtB,QAAQ,CAACuB,MAAM,CAACD,MAAM,CAAC;QAC3B,CAAC,CAAC,CACDE,OAAO,CAAC,YAAY;UACjBpB,UAAU,GAAG,KAAK;UAClBF,IAAI,GAAGC,SAAS;QACpB,CAAC,CAAC,CACDsB,IAAI,CAAC,CAAC;MACX,CAAC,EAAE3B,QAAQ,CAAC;IAChB;IAEA,OAAOE,QAAQ,CAAC0B,OAAO;EAC3B;EACA,OAAOrB,MAAM;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}